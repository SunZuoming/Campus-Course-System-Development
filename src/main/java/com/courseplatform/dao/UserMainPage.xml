<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.courseplatform.dao.UserMainPageDao">
	<!-- 根据用户编号查询用户角色编号 -->
	<select id="queryRoleidByUserno" parameterType="String" resultType="com.courseplatform.po.UserTable">
  		SELECT * FROM user_table where userno = #{userno}
	</select>
	
	<!-- 根据角色编号查询角色权限 -->
	<select id="queryJidByRoleid" parameterType="String" resultType="com.courseplatform.po.JurisdictionTable">
  		SELECT * FROM jurisdiction_table where roleid = #{roleid}
	</select>
	
	<!-- 根据功能编号查询功能全部信息 -->
	<select id="queryFunByFno" parameterType="String" resultType="com.courseplatform.po.FunctionTable">
  		SELECT * FROM function_table where FUNCTIONNO = #{functionno}
	</select>
	
	<!-- 根据收藏人编号查询该用户所收藏的全部文章 -->
	<select id="queryCollArtsByUserno" parameterType="String" resultType="com.courseplatform.po.CollectionTable">
  		SELECT * FROM collection_table where COLLECTOR = #{collector} AND COLLECTIONTYPE = '0' ORDER BY COLLECTTIME DESC<!-- 0:文章 -->
	</select>
	
	<!-- 根据文章编号查询文章信息 -->
	<select id="queryArtMsgByAno" parameterType="String" resultType="com.courseplatform.po.ArticleTable">
  		SELECT * FROM article_table where ARTICLENO = #{articleno}
	</select>
	
	<!-- 根据用户编号查询用户所发布的文章信息 -->
	<select id="queryArtMsgByUserno" parameterType="String" resultType="com.courseplatform.po.ArticleTable">
  		SELECT * FROM article_table where ARTICLEPUBLISHERNO = #{userno} ORDER BY ARTICLEPUBLISHTIME DESC
	</select>
	
	<!-- 查询所有文章类型 -->
	<select id="queryArttypes" resultType="com.courseplatform.po.ArticletypeTable">
  		SELECT * FROM articletype_table ORDER BY ARTICLETYPEID
	</select>
	
	<!-- 新增文章表 -->
	<insert id="insertArticle" parameterType="com.courseplatform.po.ArticleTable">
		insert article_table 
		values(#{articletable.articleno},
			   #{articletable.articlename},
			   #{articletable.articlepublisherno},
			   #{articletable.articlepublisher},
			   #{articletable.articlefileurl},
			   #{articletable.articlefilename},
			   #{articletable.articlecontent},
			   sysdate(),
			   #{articletable.articletypes},
			   #{articletable.articlecabstract},
			   #{articletable.articlecomnum},
			   #{articletable.articlereadnum},
			   #{articletable.articlecollectnum},
			   #{articletable.articlereportnum}
			   )
	</insert>
	
	<!-- 根据文章编号、收藏人编号、收藏类型进行收藏记录的删除 -->
	<delete id="deleteArticleColl" parameterType="String">
  		delete from collection_table where COLLECTIONNO = #{collectionno} AND COLLECTIONTYPE = #{collectiontype} AND COLLECTOR = #{collector}
	</delete>
	
	<!-- 根据文章编号删除文章记录 -->
	<delete id="deleteArticle" parameterType="String">
  		delete from article_table where ARTICLENO = #{articleno}
	</delete>
	
	<!-- 根据文章编号删除该文章收藏的所有记录 -->
	<delete id="deleteArticleCollections" parameterType="String">
  		delete from collection_table where COLLECTIONNO = #{collectionno}
	</delete>
	
	<!-- 根据文章编号删除该文章收藏的所有记录 -->
	<update id="updateArticleMsg" parameterType="com.courseplatform.po.ArticleTable">
  		update article_table 
  		   set ARTICLENAME = #{articletable.articlename},
  		   	   ARTICLECABSTRACT = #{articletable.articlecabstract},
  		   	   ARTICLECONTENT = #{articletable.articlecontent},
  		   	   ARTICLETYPES = #{articletable.articletypes}
  		 where ARTICLENO = #{articletable.articleno}
	</update>
	
	
	<!-- 查询所有问题类型 -->
	<select id="quertQuestiontypes" resultType="com.courseplatform.po.QuestiontypeTable">
  		SELECT * FROM questiontype_table ORDER BY questiontypeno DESC
	</select>
	
	<!-- 新增问题表 -->
	<insert id="insertQuestion" parameterType="com.courseplatform.po.QuestionTable">
		insert question_table 
		values(
			#{questiontable.questionno},
			#{questiontable.questionpublisherno},
			#{questiontable.questionpublisher},
			sysdate(),
			#{questiontable.questioncontent},
			#{questiontable.questioncourse},
			#{questiontable.questionresoveflag},
			#{questiontable.questionname},
			#{questiontable.questiontypeno},
			#{questiontable.questiontypename},
			#{questiontable.questioncommentnum}
		)
	</insert>
	
	<!-- 查询最新5条问题记录 -->
	<select id="queryNewQuestion" resultType="com.courseplatform.po.QuestionTable">
  		SELECT * FROM question_table ORDER BY QUESTIONTIME DESC LIMIT 0,5
	</select>
	
	<!-- 查询评论数最高的15条问题记录 -->
	<select id="queryCommentNumQuestion" resultType="com.courseplatform.po.QuestionTable">
  		SELECT * FROM question_table ORDER BY QUESTIONCOMMENTNUM DESC LIMIT 0,15
	</select>
	
	<!-- 根据问题类型查询该类型本月评论数最高的问题(取前3条数据) -->
	<select id="queryMounthComnumQue"  parameterType="String" resultType="com.courseplatform.po.QuestionTable">
  		SELECT * FROM question_table WHERE QUESTIONTYPENO = #{questiontypeno} ORDER BY month(QUESTIONTIME) DESC LIMIT 0,3
	</select>
	
	<!-- 根据问题类型查询该类型本年评论数最高的问题(取前3条数据) -->
	<select id="queryYearComnumQue"  parameterType="String" resultType="com.courseplatform.po.QuestionTable">
  		SELECT * FROM question_table WHERE QUESTIONTYPENO = #{questiontypeno} ORDER BY year(QUESTIONTIME) DESC LIMIT 0,3
	</select>
	
	<!-- 根据问题类型查询该类型下全部问题信息(按问题发表时间降序排序) -->
	<select id="queryQueByQtype" parameterType="java.util.HashMap" resultType="com.courseplatform.po.QuestionTable">
  		SELECT * FROM question_table WHERE QUESTIONTYPENO = #{questionmap.questiontypeno} ORDER BY QUESTIONTIME DESC LIMIT #{questionmap.start},#{questionmap.stop}
	</select>
	
	<!-- 根据问题类型查询该类型下评论数最高的问题(按评论降序排序) -->
	<select id="queryComnumQueByQtype" parameterType="java.util.HashMap" resultType="com.courseplatform.po.QuestionTable">
  		SELECT * FROM question_table WHERE QUESTIONTYPENO = #{questionmap.questiontypeno} ORDER BY QUESTIONCOMMENTNUM DESC LIMIT #{questionmap.start},#{questionmap.stop}
	</select>
	
	<!-- 根据问题编号查询问题详情 -->
	<select id="quertQuestionByQno" parameterType="String" resultType="com.courseplatform.po.QuestionTable">
  		SELECT * FROM question_table WHERE QUESTIONNO = #{questionno}
	</select>
	
	<!-- 新增问题回答表-->
	<insert id="insertAnswer" parameterType="com.courseplatform.po.AnswerTable">
		insert answer_table 
		values(
			#{answertable.answerno},
			#{answertable.questionno},
			#{answertable.answernerno},
			#{answertable.answerner},
			sysdate(),
			#{answertable.answercontent},
			#{answertable.answerfileurl},
			#{answertable.answerfilename},
			#{answertable.answerrightflag}
		)
	</insert>
	
	<!-- 根据问题编号查询问题回答记录信息 -->
	<select id="quertAnswersByQno" parameterType="String" resultType="com.courseplatform.po.AnswerTable">
  		SELECT * FROM answer_table WHERE QUESTIONNO = #{questionno}
	</select>
	
	<!-- 根据用户编号查询用户所有文章分类信息 -->
	<select id="quertArtByUserno" parameterType="String" resultType="java.lang.String">
  		SELECT ARTICLETYPES FROM article_table WHERE ARTICLEPUBLISHERNO = #{userno}
	</select>
	
	<!-- 通过课程文章类型编号查询课程文章类型信息 -->
	<select id="queryArttypeByTypeno" resultType="com.courseplatform.po.ArticletypeTable">
  		SELECT * FROM articletype_table WHERE ARTICLETYPEID = #{typeno}
	</select>
	
	<!-- 根据用户编号、课程文章类型编号查询用户所发布的文章信息 -->
	<select id="queryArtclesByTypeno" parameterType="String" resultType="com.courseplatform.po.ArticleTable">
  		SELECT * FROM article_table where ARTICLEPUBLISHERNO = #{userno} AND ARTICLETYPES like concat('%',#{typeid},'%') ORDER BY ARTICLEPUBLISHTIME DESC
	</select>
	
	<!-- 根据问题编号对问题评论记录进行+1 -->
	<update id="updateQuesnumAdd1" parameterType="String">
  		update question_table 
  		   set QUESTIONCOMMENTNUM = QUESTIONCOMMENTNUM + 1
  		 where QUESTIONNO = #{questionno}
	</update>
	
	<!-- 新增回复表replay_table-->
	<insert id="insertReplay" parameterType="com.courseplatform.po.ReplayTable">
		insert replay_table 
		values(
			#{replaytable.replayno},
			#{replaytable.answerno},
			#{replaytable.answerpno},
			#{replaytable.answerpname},
			#{replaytable.replaypno},
			#{replaytable.replaypname},
			#{replaytable.replayconcant},
			sysdate()
		)
	</insert>
	
	<!-- 新增消息表info_table -->
	<insert id="insertInfo" parameterType="com.courseplatform.po.InfoTable">
		insert info_table 
		values(
			#{infotable.infono},
			#{infotable.info},
			#{infotable.infotype},
			sysdate(),
			#{infotable.infouserno},
			#{infotable.inforeadsign}
		)
	</insert>
	
	<!-- 根据评论编号进行该评论的回复查询 -->
	<select id="queryReplayByAnswerno" parameterType="String" resultType="com.courseplatform.po.ReplayTable">
  		SELECT * FROM replay_table WHERE ANSWERNO = #{answerno}
	</select>
	
	<!-- 查询个人未读消息记录个数 -->
	<select id="queryInfonumByUserno" parameterType="String" resultType="com.courseplatform.po.InfoTable">
  		SELECT *
  		  FROM info_table
  		 WHERE inforeadsign = '0'
  		   AND infouserno = #{userno}
  		 ORDER BY infotime desc
	</select>
	
	<!-- 查询个人消息记录个数 -->
	<select id="queryInfoByUserno" parameterType="String" resultType="com.courseplatform.po.InfoTable">
  		SELECT *
  		  FROM info_table
  		 WHERE infouserno = #{userno}
  		 ORDER BY infotime desc
	</select>
	
	<!-- 根据评论编号查询该评论记录 -->
	<select id="queryAnwserByAno" parameterType="String" resultType="com.courseplatform.po.AnswerTable">
  		SELECT * FROM answer_table WHERE answerno = #{answerno}
	</select>
	
	<!-- 根据回复编号查询回复记录 -->
	<select id="queryReplayByRno" parameterType="String" resultType="com.courseplatform.po.ReplayTable">
  		SELECT * FROM replay_table WHERE replayno = #{replayno}
	</select>
	
	<!-- 根据消息编号将消息是否已读标志改为已读 (1) -->
	<update id="updateInfoReadsign" parameterType="String">
  		update info_table 
  		   set inforeadsign = '1'
  		 where infono = #{infono}
	</update>
	
	<!-- 根据消息编号删除消息记录 -->
	<delete id="deleteInfoByInfono" parameterType="String">
  		delete from info_table where infono = #{infono}
	</delete>
	
	<!-- 查询公告信息-->
	<select id="queryNotices" resultType="com.courseplatform.po.NoticeTable">
  		SELECT * FROM notice_table WHERE  curdate() >= str_to_date(NOTICESTARTDATE,'%Y-%m-%d') AND str_to_date(NOTICEENDDATE,'%Y-%m-%d') >= curdate() AND NOTICEENDFLAG = '0' ORDER BY NOTICEPUBLISHERDATE DESC LIMIT 0,5
	</select>
	
	<!-- 查询浏览最高的前5个文章信息 -->
	<select id="queryHostArctiles" resultType="com.courseplatform.po.ArticleTable">
  		SELECT * FROM ARTICLE_TABLE ORDER BY ARTICLEREADNUM DESC LIMIT 0,5
	</select>
	
	<!-- 根据问题类型和问题标题进行模糊查询 -->
	<select id="queryAllQueByQname" resultType="com.courseplatform.po.QuestionTable">
  		SELECT * FROM question_table WHERE QUESTIONNAME like concat('%',#{questionname},'%') AND QUESTIONTYPENO = #{questiontypeno}
	</select>
	
	<!-- 根据问题类型和问题标题进行模糊查询,并按评论排序 -->
	<select id="queryHostQueByQname" resultType="com.courseplatform.po.QuestionTable">
  		SELECT * FROM question_table WHERE QUESTIONNAME like concat('%',#{questionname},'%') AND QUESTIONTYPENO = #{questiontypeno} ORDER BY QUESTIONCOMMENTNUM DESC
	</select>
</mapper>